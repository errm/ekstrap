#!/usr/bin/env ruby

require "base64"
require "fileutils"
require "/usr/local/lib/k8s_node_info"
include K8sNodeInfo

EKS_CA_PATH = "/etc/kubernetes/pki/ca.crt"

def run!
  validate_running_as_root
  write_config(EKS_CA_PATH, kubernetes_eks_ca)
  write_config("/var/lib/kubelet/kubeconfig", kubeconfig)
  write_config("/lib/systemd/system/kubelet.service", kubelet_eks_conf) do
    system("systemctl daemon-reload")
    system("systemctl restart kubelet.service")
  end
end

def kubeconfig
  <<~KUBECONFIG
    apiVersion: v1
    kind: Config
    clusters:
    - name: #{cluster_name}
      cluster:
        server: #{eks_endpoint}
        certificate-authority-data: #{eks_describe_cluster("cluster.certificateAuthority.data").chomp}
    contexts:
    - name: kubelet
      context:
        cluster: #{cluster_name}
        user: kubelet
    current-context: kubelet
    users:
    - name: kubelet
      user:
        exec:
          apiVersion: client.authentication.k8s.io/v1alpha1
          command: /usr/local/bin/heptio-authenticator-aws
          args:
            - token
            - "-i"
            - "#{cluster_name}"
  KUBECONFIG
end

def kubernetes_eks_ca
  Base64.decode64(eks_describe_cluster("cluster.certificateAuthority.data"))
end

def kubelet_eks_conf
  <<~CONF
    [Unit]
    Description=kubelet: The Kubernetes Node Agent
    Documentation=http://kubernetes.io/docs/
    After=docker.service
    Requires=docker.service

    [Service]
    ExecStart=/usr/bin/kubelet   --address=0.0.0.0   --allow-privileged=true   --cloud-provider=aws   --cluster-dns=10.100.0.10   --cluster-domain=cluster.local   --cni-bin-dir=/opt/cni/bin   --cni-conf-dir=/etc/cni/net.d   --container-runtime=docker   --node-ip=#{node_ip}   --network-plugin=cni   --cgroup-driver=cgroupfs   --register-node=true   --kubeconfig=/var/lib/kubelet/kubeconfig   --feature-gates=RotateKubeletServerCertificate=true   --anonymous-auth=false   --client-ca-file=#{EKS_CA_PATH}

    Restart=on-failure
    Restart=always
    StartLimitInterval=0
    RestartSec=10

    [Install]
    WantedBy=multi-user.target
  CONF
end

run!
